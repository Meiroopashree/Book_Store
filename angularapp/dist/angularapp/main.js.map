{"version":3,"sources":["./src/app/components/customer-view-gifts/customer-view-gifts.component.ts","./src/app/components/customer-view-gifts/customer-view-gifts.component.html","./src/app/services/customer.service.ts","./src/app/components/place-order/place-order.component.ts","./src/app/components/place-order/place-order.component.html","./src/app/components/view-orders/view-orders.component.ts","./src/app/components/view-orders/view-orders.component.html","./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/my-orders/my-orders.component.ts","./src/app/components/my-orders/my-orders.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/view-review/view-review.component.ts","./src/app/components/view-review/view-review.component.html","./src/app/components/customerdashboard/customerdashboard.component.ts","./src/app/components/customerdashboard/customerdashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/add-review/add-review.component.ts","./src/app/components/add-review/add-review.component.html","./src/app/app.module.ts","./src/app/components/edit-gift/edit-gift.component.ts","./src/app/components/edit-gift/edit-gift.component.html","./src/app/services/cart.service.ts","./src/app/components/my-cart/my-cart.component.ts","./src/app/components/my-cart/my-cart.component.html","./src/app/components/registration/registration.component.ts","./src/app/components/registration/registration.component.html","./src/app/components/authguard/auth.guard.ts","./src/app/components/add-gift/add-gift.component.ts","./src/app/components/add-gift/add-gift.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/view-gifts/view-gifts.component.ts","./src/app/components/view-gifts/view-gifts.component.html","./src/app/services/order.service.ts","./src/app/services/auth.service.ts","./src/app/services/gift.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { GiftService } from 'src/app/services/gift.service';\nimport { User } from 'src/app/models/user.model';\nimport { Router } from '@angular/router';\nimport { Gift } from 'src/app/models/gift.model';\nimport { Customer } from 'src/app/models/customer.model';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-customer-view-gifts',\n  templateUrl: './customer-view-gifts.component.html',\n  styleUrls: ['./customer-view-gifts.component.css']\n})\nexport class CustomerViewGiftsComponent implements OnInit {\n  name: string;\n  address: string;\n  gifts: any[] = [];\n  user: User;\n  totalAmount: number;\n  customer: Customer;\n  formSubmitted: boolean = false;\n  customerId = localStorage.getItem('customerId');\n  customerIdRegistered: boolean = false;\n  addedToCart = false;\n  popupMessage: string = '';\n  showPopup: boolean = false;\n  message = \"\";\n\n  constructor(private customerService: CustomerService, private giftService: GiftService, private router: Router, private cartService: CartService) { }\n  gift: Gift[]\n  ngOnInit(): void {\n    this.viewAllGifts();\n    this.customerId = localStorage.getItem('customerId');\n    console.log(this.customerId);\n  }\n\n  hasCustomerId(): boolean {\n    // if(localStorage.getItem('customerId') === null;\n  // }\n\n  // console.log(\"localStorage.getItem('customerId')\",localStorage.getItem('customerId')==\"null\",localStorage.getItem('customerId')==null)\nif(localStorage.getItem('customerId')==\"0\")\n{\n  \n  return true\n}\nreturn false\n\n\n\n  }\n\n\n\n  onSubmit(): void {\n    const newCustomer= {\n\n      customerName: this.name,\n      address: this.address,\n      //             // userId: Number(localStorage.getItem('userId')),\n      userId:  localStorage.getItem('userId'),\n    };\n    // const userId = Number(localStorage.getItem('userId'));\n\n    this.customerService.registerCustomer(newCustomer).subscribe(\n      (response) => {\n        console.log(response, \"customerId\")\n        localStorage.setItem('customerId', response.registeredCustomer.customerId);\n        localStorage.setItem('cartId', response.cartId);\n        const customerId = localStorage.getItem(\"customerId\");\n        console.log(customerId);\n        const cardId = localStorage.getItem(\"cartId\")\n        console.log(cardId)\n        // this.viewAllGifts();\n        this.formSubmitted = true;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  viewAllGifts(): void {\n    this.giftService.viewAllGifts().subscribe(\n      (response: any) => { // Assuming the response is of type any\n        console.log(response);\n        console.log(\"response--------------------\",response);\n\n        // Assuming the response contains $id and $values properties\n        const id = response.$id;\n        const values = response.$values;\n\n        // Assuming this.gifts is an array where you want to store the gifts\n        this.gifts = values\n\n\n        console.log(this.gifts, \"this.gifts\");\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n\n  goToCart(gift): void {\n    let cartId = localStorage.getItem('cartId');\n    if (cartId === null) {\n      this.addCart(gift.giftId, gift);\n    } else {\n      this.updateCart(gift, cartId);\n    }\n    gift.addedToCart = true;\n  }\n\n  customers: Customer = {\n    customerId: Number(localStorage.getItem('customerId')),\n    user: { id: Number(localStorage.getItem('userId')) } as User,\n  };\n\n  addCart(giftId: any, updatedGift: any): void {\n    this.totalAmount = updatedGift.giftPrice;\n    console.log(this.totalAmount);\n    console.log(this.customer);\n    this.gift = updatedGift;\n    console.log(this.gift);\n\n    let cart = {\n      customer: this.customers,\n      gifts: [this.gift],\n      totalAmount: this.totalAmount,\n    };\n\n    console.log('check cart', cart);\n\n    this.giftService.updateGift(giftId, updatedGift).subscribe(\n      (response) => {\n        console.log(response, \"cart updated succesfully\");\n        this.addedToCart = true;\n        localStorage.setItem('cartId', response.cartId);\n        // this.router.navigate(['/customer/mycart']);\n\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  calculateTotalAmount(gift) {\n    if (gift && gift.giftPrice && gift.quantity) {\n      return gift.giftPrice * gift.quantity;\n    }\n    return 0;\n  }\n\n  updateCart(gift, cartId) {\n    // Implement this method to update the cart\n    this.totalAmount = this.calculateTotalAmount(gift);\n    console.log(this.totalAmount);\n    console.log(this.customerId);\n    this.gift = gift;\n    console.log(this.gift);\n\n    let cart = {\n      cartId: cartId,\n      customerId:localStorage.getItem('customerId'),\n      // customer: this.customers,\n      gifts: [this.gift],\n      totalAmount: this.totalAmount,\n      updatedCart: true\n    };\n\n    console.log('check cart', cart);\n\n    this.giftService.updateGift(gift.giftId, gift).subscribe(\n      (response) => {\n        console.log(response);\n        this.addedToCart = true;\n        // this.router.navigate(['/customer/mycart']);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n\n\n    //   viewCustomerById(customerId: number): void {\n    //     this.customerService.viewCustomerById(this.customerId).subscribe(\n    //       (response) => {\n    //         console.log(response);\n    //         this.customers = response;\n    //       },\n    //       (error) => {\n    //         console.error(error);\n    //       }\n    //     );\n    //   }\n  }\n}","<app-customerdashboard></app-customerdashboard>\n\n<div *ngIf=\"hasCustomerId(); else giftsList\">\n    <div class=\"modal-content\">\n        <form (ngSubmit)=\"onSubmit()\">\n            <h2>Fill Your Details</h2>\n            <div class=\"form-group\">\n              <label for=\"name\" style=\"position: relative;\"> <!-- Add relative positioning to the label -->\n                Name:\n                <input type=\"text\" id=\"name\" [(ngModel)]=\"name\" name=\"name\" required>\n                <div *ngIf=\"!name\" class=\"error-message\" style=\"position: absolute; top: 0; right: 0;\">*</div> <!-- Display the asterisk conditionally -->\n              </label>\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"address\" style=\"position: relative;\"> <!-- Add relative positioning to the label -->\n                Address:\n                <textarea id=\"address\" [(ngModel)]=\"address\" name=\"address\" required></textarea>\n                <div *ngIf=\"!address\" class=\"error-message\" style=\"position: absolute; top: 0; right: 0;\">*</div> <!-- Display the asterisk conditionally -->\n              </label>\n            </div>\n          \n            <button type=\"submit\" [disabled]=\"!name || !address\">Submit</button>\n          </form>\n          \n    </div>\n</div>\n\n<ng-template #giftsList>\n    <div class=\"gifts-container\">\n        <div class=\"gift\" *ngFor=\"let gift of gifts\">\n            <img [src]=\"gift.giftImageUrl\" alt=\"{{gift.giftType}}\">\n            <h2>Gift Type: {{gift.giftType}}</h2>\n            <p>Gift Details: {{gift.giftDetails}}</p>\n            <p>Price: {{gift.giftPrice}}</p>\n            <p>Available Quantity: {{gift.quantity}}</p>\n            <button (click)=\"goToCart(gift)\" [disabled]=\"gift.addedToCart\">Add to Cart</button>\n        </div>\n    </div>\n</ng-template>\n<div *ngIf=\"showPopup\" class=\"popup\">{{ popupMessage }}</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  public apiUrl =\n    'https://8080-bfabeabdaebdadfccdadbafeaecccaaeccf.premiumproject.examly.io';\n\n  constructor(private http: HttpClient) {}\n\n\n  registerCustomer(customer: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    console.log(customer);\n\n    return this.http.post(`${this.apiUrl}/api/customer`,customer,{headers});\n  }\n\n  viewCustomerById(customerId: any): any {\n  const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.get(`${this.apiUrl}/api/customer/${customerId}`, {headers});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartService } from 'src/app/services/cart.service';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-place-order',\n  templateUrl: './place-order.component.html',\n  styleUrls: ['./place-order.component.css']\n})\n\nexport class PlaceOrderComponent implements OnInit {\n  showSuccessPopup: boolean = false;\n  totalAmount : number;\n customerId = Number(localStorage.getItem('customerId'));\n//  currentUser = localStorage.getItem('currentUser');\n\n customerData: any;\n  constructor(private cartService: CartService, private customerService: CustomerService, private router: Router, private route: ActivatedRoute, private orderService: OrderService) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.totalAmount = params['totalAmount'];\n    });\n    this.getAllGiftsFromCart()\n  }\n\n  getAllGiftsFromCart() {\n    this.cartService.getAllGiftsFromCart().subscribe(\n      response => {\n        console.log(response);\n        this.customerData = response;\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n  submitOrder() {\n    if (!this.customerData || !this.customerData.gifts || !this.customerData.gifts.$values || this.customerData.gifts.$values.length === 0) {\n      console.error('Invalid customer data');\n      return;\n    }\n\n    \n   \n    const orderData = {\n      customerId: this.customerId,\n      quantity: this.customerData.gifts.$values.length,\n      orderPrice:this.totalAmount,\n      gifts: this.customerData.gifts.$values.map(gift => ({\n        // giftId: gift.giftId,\n        giftType: gift.giftType,\n        giftImageUrl: gift.giftImageUrl,\n        giftDetails: gift.giftDetails,\n        giftPrice: gift.giftPrice,\n        quantity: gift.quantity,\n        cartId: gift.cartId\n      }))\n    };\n  \n    console.log(orderData);\n  \n    this.orderService.addOrder(orderData).subscribe(\n      response => {\n        console.log(\"Order added successfully\", response);\n      },\n      error => {\n        console.error(\"Error adding Order\",error);\n      }\n    );\n    \n  \n      setTimeout(() => {\n        this.showSuccessPopup = true;\n      }, 2000);\n    }\n\n    navigateToDashboard() {\n      this.router.navigate(['/customer/myorders']);\n  }\n \n  }","<!-- <app-customerdashboard></app-customerdashboard>\n<form (ngSubmit)=\"onSubmit()\">\n    <div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"customerData.customer.customerName\" readonly>\n    </div>\n    <div>\n      <label for=\"mobile\">Mobile Number:</label>\n      <input type=\"tel\" id=\"mobile\" name=\"mobile\" [(ngModel)]=\"customerData.customer.user.mobileNumber\" readonly>\n    </div>\n    <div>\n      <label for=\"address\">Address:</label>\n      <textarea id=\"address\" name=\"address\" [(ngModel)]=\"customerData.customer.address\" readonly></textarea>\n    </div>\n    <div>\n      <label for=\"email\">Email ID:</label>\n      <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"customerData.customer.user.email\" readonly>\n    </div>\n    <div>\n        <label for=\"totalPrice\">Total Price:</label>\n        <input type=\"number\" id=\"totalPrice\" name=\"totalPrice\" [(ngModel)]=\"customerData.totalAmount\" readonly>\n      </div>\n    <div>\n      <button type=\"submit\">Make Payment</button>    \n  </div>\n  </form>\n  <div *ngIf=\"showSuccessPopup\" class=\"success-popup\">\n    <p>Payment was successful!</p>\n    <button (click)=\"navigateToDashboard()\">OK</button>\n  </div> -->\n<app-customerdashboard></app-customerdashboard>\n  <form>\n      <div *ngIf=\"customerData?.customer\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"customerData.customer.customerName\" readonly>\n      </div>\n      <div *ngIf=\"customerData?.customer\">\n        <label for=\"address\">Address:</label>\n        <textarea id=\"address\" name=\"address\" [(ngModel)]=\"customerData.customer.address\" readonly></textarea>\n      </div>\n       <div>\n        <label for=\"totalPrice\">Total Price:</label>\n        <input type=\"number\" id=\"totalPrice\" name=\"totalPrice\" [(ngModel)]=\"totalAmount\" readonly>\n      </div>\n      <div>\n        <button type=\"submit\" (click)=\"submitOrder()\">\n          Make Payment</button>    \n    </div>\n  </form>\n  \n  \n  <div *ngIf=\"showSuccessPopup\" class=\"success-popup\">\n    <p>Payment was successful!</p>\n    <button (click)=\"navigateToDashboard()\">OK</button>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/services/order.service';\nimport { Order } from 'src/app/models/order.model';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Customer } from 'src/app/models/customer.model';\n\n@Component({\n  selector: 'app-view-orders',\n  templateUrl: './view-orders.component.html',\n  styleUrls: ['./view-orders.component.css']\n})\nexport class ViewOrdersComponent implements OnInit {\n  orders: any;\n  message: string = '';\n\n  constructor(private orderService: OrderService, private customerService: CustomerService) { }\n\n  ngOnInit(): void {\n    this.viewAllOrders();\n  }\n  viewAllOrders() {\n    // this.orderService.viewAllOrders().subscribe((response: any) => {\n    //   this.orders = response;\n    //   console.log(this.orders);\n    //   if (this.orders.length === 0) {\n    //     this.message = 'No orders placed';\n    //   } else {\n    //     this.message = '';\n    //   }\n    // }, error => {\n    //   console.error('Error:', error);\n    // });\n    // this.orderService.viewAllOrders().subscribe((response: any) => {\n    //   this.orders = Array.isArray(response) ? response : Object.values(response);\n    //   console.log(this.orders);\n    //   if (this.orders.length === 0) {\n    //     this.message = 'No orders placed';\n    //   } else {\n    //     this.message = '';\n    //   }\n    // }, error => {\n    //   console.error('Error:', error);\n    // });\n    // this.orderService.viewAllOrders().subscribe((response: any) => {\n    //   console.log(response);\n    //   this.orders = response;\n    //   console.log(this.orders);\n    //   if (!this.orders || this.orders.length === 0) {\n    //     this.message = 'No orders placed';\n    //   } else {\n    //     this.message = '';\n    //   }\n    // }, error => {\n    //   console.error('Error:', error);\n    // });\n    // this.orderService.viewAllOrders().subscribe((response: any) => {\n    //   console.log(response);\n    //   this.orders = response.$values;\n    //   console.log(this.orders);\n    //   if (!this.orders || this.orders.length === 0) {\n    //     this.message = 'No orders placed';\n    //   } else {\n    //     this.message = '';\n    //   }\n    // }, error => {\n    //   console.error('Error:', error);\n    // });\n    // this.orderService.viewAllOrders().subscribe((response: any) => {\n    //   console.log(response);\n    //   if (response.$values && Array.isArray(response.$values)) {\n    //     this.orders = response.$values;\n    //   } else if (response.$values && typeof response.$values === 'object') {\n    //     this.orders = Object.values(response.$values);\n    //   } else {\n    //     this.orders = [];\n    //   }\n    //   console.log(this.orders);\n    //   if (!this.orders || this.orders.length === 0) {\n    //     this.message = 'No orders placed';\n    //   } else {\n    //     this.message = '';\n    //   }\n    // }, error => {\n    //   console.error('Error:', error);\n    // });\n    this.orderService.viewAllOrders().subscribe((response: any) => {\n      console.log(response);\n      if (response.$values && Array.isArray(response.$values)) {\n        this.orders = response.$values;\n      } else if (response.$values && typeof response.$values === 'object') {\n        this.orders = Object.values(response.$values);\n      } else {\n        this.orders = [];\n      }\n\n      // Fetch the customer details for each order\n      this.orders.forEach((order: any) => {\n        this.customerService.viewCustomerById(order.customerId).subscribe((customer: any) => {\n          order.customer = customer; // Add the customer details to the order\n        });\n      });\n\n      console.log(this.orders);\n      if (!this.orders || this.orders.length === 0) {\n        this.message = 'No orders placed';\n      } else {\n        this.message = '';\n      }\n    }, error => {\n      console.error('Error:', error);\n    });\n  }\n  }\n  \n","<app-dashboard></app-dashboard>\n<table>\n    <thead>\n        <tr class=\"styled-table\">\n            <!-- <th>Order ID</th> -->\n            <th>S.No</th>\n            <th>Customer Name</th>\n            <th>Address</th>\n            <th>Quantity</th>\n            <th>Total Price</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let order of orders;let i=index\">\n            <!-- <td>{{ order.orderId }}</td> -->\n            <td>{{ i + 1 }}</td>\n            <td>{{ order.customer.customerName }}</td>\n            <td>{{ order.customer.address }}</td>\n            <td>{{ order.quantity }}</td>\n            <td>{{ order.orderPrice }}</td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"parent\">\n    <div class=\"error-container\">\n        <h1 class=\"h\">Something Went Wrong</h1>\n        <p class=\"p\">We're sorry, but an error occurred. Please try again later.</p>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Online Customized Gift Portal</h1>\n    <p>\n        Welcome to Online Customized Gift Portal, where heartfelt moments come to life through personalized treasures.\n\n        Discover the joy of gifting with our curated collection of unique and customizable items, crafted to make every occasion truly special.\n        \n        Explore a world of creativity as you browse through our extensive range of personalized gifts, from custom mugs to engraved jewelry, each item designed to convey your deepest sentiments.\n        \n        Celebrate life's milestones with a touch of individuality, as you choose from our selection of personalized photo frames, custom-made canvas prints, and bespoke keepsakes that capture memories in the most meaningful way.\n        \n        Transform ordinary moments into extraordinary memories with our easy-to-use customization tools, allowing you to add a personal touch to each gift, ensuring it reflects the recipient's personality and your thoughtfulness.\n        \n        At our Customized Gift Portal, we believe in the power of personalized expression, where every item tells a unique story. Let us be your partner in creating moments that last a lifetime.\n        \n        Whether it's birthdays, anniversaries, or special holidays, our dedicated team is here to help you find the perfect personalized gift that will leave a lasting impression.\n        \n        Experience the joy of giving like never before. Start your journey with us, and let your emotions shine through the art of personalized gifting. Welcome to a world where every gift is a masterpiece, and every moment is cherished.\n    </p>\n  </div>\n  ","  import { Component, OnInit } from '@angular/core';\n  import { OrderService } from 'src/app/services/order.service';\n  import { CustomerService } from 'src/app/services/customer.service';\n  import { GiftService } from 'src/app/services/gift.service';\n\n  @Component({\n    selector: 'app-my-orders',\n    templateUrl: './my-orders.component.html',\n    styleUrls: ['./my-orders.component.css']\n  })\n  export class MyOrdersComponent implements OnInit {\n    orders = [];\n    customers = {};\n\n    constructor(private orderService: OrderService, private customerService: CustomerService, private giftService:GiftService) { }\n\n    ngOnInit(): void {\n      this.viewOrderByUserId();\n    }\n\n    // viewOrderByUserId() {\n    //   this.orderService.viewOrderByUserId().subscribe(\n    //     response => {\n    //       console.log(response);\n    //       this.orders = response.$values;\n    //     },\n    //     error => {\n    //       console.error(error);\n    //     }\n    //   );\n    // }\n    viewOrderByUserId() {\n      this.orderService.viewOrderByUserId().subscribe(\n        response => {\n          console.log(response);\n          this.orders = response.$values;\n          this.orders.forEach(order => {\n            if (order.gifts && order.gifts.$values) {\n              order.gifts = order.gifts.$values;\n              \n            } else {\n              console.error('order.gifts.$values is not defined:', order.gifts);\n            }\n          });\n        },\n        error => {\n          console.error(error);\n        }\n      );\n    }\n    cancelOrder(orderId: string): void {\n      this.orderService.deleteOrder(orderId).subscribe(\n        response => {\n          console.log(response);\n          // Remove the cancelled order from the orders array\n          this.orders = this.orders.filter(order => order.orderId !== orderId);\n        },\n        error => {\n          console.error(error);\n        }\n      );\n    }\n  }\n","<!-- <app-customerdashboard></app-customerdashboard>\n<h1>My Orders</h1>\n<div *ngFor=\"let order of orders\">\n  <div class=\"main-container\">\n    <div class=\"left-container\">\n      <h2>Order ID: {{ order.orderId }}</h2>\n      <p>Order Price: ${{ order.orderPrice }}</p>\n      <p>Quantity: {{ order.quantity }}</p>\n    </div>\n  </div>\n \n  <div class=\"main-container\">\n    <div class=\"gift-list\">\n      <div *ngFor=\"let gift of order.gifts\" class=\"gift-container\">\n        <img [src]=\"gift.giftImageUrl\" alt=\"Gift Image\" />\n        <h2>Gift Type: {{ gift.giftType }}</h2>\n        <p>Gift Details{{ gift.giftDetails }}</p>\n        <p>Price: ${{ gift.giftPrice }}</p>\n        <p>Quantity: {{ gift.quantity }}</p>\n      </div>\n    </div>\n  </div>\n</div> -->\n\n<app-customerdashboard></app-customerdashboard>\n<h1>My Orders</h1>\n<table>\n  <thead>\n    <tr>\n      <!-- <th>Order ID</th> -->\n      <th>Order Price</th>\n      <!-- <th>Quantity</th> -->\n      <th>Gifts</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let order of orders\">\n      <!-- <td>{{ order.orderId }}</td> -->\n      <td>${{ order.orderPrice }}</td>\n      <!-- <td>{{ order.quantity }}</td> -->\n      <td>\n        <table>\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Type</th>\n              <th>Details</th>\n              <th>Price</th>\n              <th>Quantity</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let gift of order.gifts\">\n              <td><img [src]=\"gift.giftImageUrl\" alt=\"Gift Image\" /></td>\n              <td>{{ gift.giftType }}</td>\n              <td>{{ gift.giftDetails }}</td>\n              <td>${{ gift.giftPrice }}</td>\n              <td>{{ gift.userQuantity }}</td>\n              <!-- <button (click)=\"cancelOrder(order.orderId)\">Cancel Order</button> -->\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    </tr>\n  </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  logout() {\n    // Add your logout logic here (e.g., clearing session, redirecting to login page)\n    // For now, let's navigate to the login page\n    this.router.navigate(['/login']);\n  }\n  isActive(route: string): boolean {\n    return this.router.url === route;\n  }\n\n}\n","<!-- <div class=\"container\">\n  <div class=\"link my-gifts-link\" [routerLink]=\"['/admin/gifts/view']\">My Gifts</div>\n  <div class=\"link add-gifts-link\" [routerLink]=\"['/admin/addgift']\">Add Gifts</div>\n  <div class=\"link view-orders-link\" [routerLink]=\"['/admin/vieworders']\">View Orders</div>\n  <div class=\"link view-orders-link\" [routerLink]=\"['/admin/viewreview']\">View Review</div>\n</div> -->\n<div class=\"container\">\n  <div class=\"link my-gifts-link\" [routerLink]=\"['/admin/gifts/view']\" [class.active]=\"isActive('/admin/gifts/view')\">My Gifts</div>\n  <div class=\"link add-gifts-link\" [routerLink]=\"['/admin/addgift']\" [class.active]=\"isActive('/admin/addgift')\">Add Gifts</div>\n  <div class=\"link view-orders-link\" [routerLink]=\"['/admin/vieworders']\" [class.active]=\"isActive('/admin/vieworders')\">View Orders</div>\n  <div class=\"link view-review-link\" [routerLink]=\"['/admin/viewreview']\" [class.active]=\"isActive('/admin/viewreview')\">View Review</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Review } from 'src/app/models/review.model';\nimport { CartService } from 'src/app/services/cart.service';\n\n@Component({\n  selector: 'app-view-review',\n  templateUrl: './view-review.component.html',\n  styleUrls: ['./view-review.component.css']\n})\nexport class ViewReviewComponent implements OnInit {\n  reviews: Review[] = [];\n\n  constructor(private cartService: CartService) {}\n\n  ngOnInit() {\n    this.getAllReviews();\n  }\n\n  // getAllReviews() {\n  //   this.cartService.getAllReviews().subscribe(\n  //     (response: Review[]) => { // Specify the type of response as Review[]\n  //       this.reviews = response;\n  //     },\n  //     (error) => {\n  //       console.error('Error fetching reviews', error);\n  //       // Handle error, display an error message, etc.\n  //     }\n  //   );\n  // }\n  getAllReviews() {\n    this.cartService.getAllReviews().subscribe(\n      (response: any) => {\n        // Check if response has $values property and it's an array\n        if (response && response.$values && Array.isArray(response.$values)) {\n          // Assuming $values contains the array of Review objects\n          this.reviews = response.$values;\n          console.log(this.reviews);\n        } else {\n          console.error('Invalid response format:', response);\n        }\n      },\n      (error) => {\n        console.error('Error fetching reviews', error);\n        // Handle error, display an error message, etc.\n      }\n    );\n  }\n  \n\n}\n","<app-dashboard></app-dashboard>\n<div class=\"main-container\">\n    <h1>View Reviews</h1>\n  \n    <table class=\"reviews-table\">\n      <thead>\n        <tr>\n          <th>S.No</th>\n          <th>Customer Name</th>\n          <th>Gift Type</th>\n          <th>Feedback comments</th>\n          <th>Rating</th>\n          <th>Date Created</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let review of reviews;let i=index\">\n          <td>{{ i+1 }}</td>\n          <td>{{ review.user.username }}</td>\n          <td>{{ review.subject }}</td>\n          <td>{{ review.body }}</td>\n          <td>{{ review.rating }}</td>\n          <td>{{ review.dateCreated | date: 'dd/MM/yyyy' }}</td>\n        </tr>\n      </tbody>\n    </table>\n  \n    <div *ngIf=\"reviews.length === 0\" class=\"no-reviews-message\">\n      No reviews available.\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-customerdashboard',\n  templateUrl: './customerdashboard.component.html',\n  styleUrls: ['./customerdashboard.component.css']\n})\nexport class CustomerdashboardComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  logout() {\n    // Add your logout logic here (e.g., clearing session, redirecting to login page)\n    // For now, let's navigate to the login page\n    this.router.navigate(['/login']);\n  }\n  isActive(route: string): boolean {\n    return this.router.isActive(route, true);\n  }\n\n}\n","<!-- <div class=\"container\">\n  <div class=\"link my-gifts-link\" [routerLink]=\"['/customer/gifts/view']\">Gifts</div>\n  <div class=\"link add-gifts-link\" [routerLink]=\"['/customer/mycart']\">My Cart</div>\n  <div class=\"link view-orders-link\" [routerLink]=\"['/customer/myorders']\">My Orders</div>\n  <div class=\"link add-review-link\" [routerLink]=\"['/customer/addreview']\">Add review</div>\n</div> -->\n<div class=\"container\">\n  <div class=\"link my-gifts-link\" [routerLink]=\"['/customer/gifts/view']\" [class.active]=\"isActive('/customer/gifts/view')\">Gifts</div>\n  <div class=\"link add-gifts-link\" [routerLink]=\"['/customer/mycart']\" [class.active]=\"isActive('/customer/mycart')\">My Cart</div>\n  <div class=\"link view-orders-link\" [routerLink]=\"['/customer/myorders']\" [class.active]=\"isActive('/customer/myorders')\">My Orders</div>\n  <div class=\"link view-orders-link\" [routerLink]=\"['/customer/addreview']\" [class.active]=\"isActive('/customer/addreview')\">Add review</div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angularapp';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: string = '';\n  password: string = '';\n  error: string = '';\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  login(): void {\n    this.authService.login(this.email, this.password).subscribe(\n      (asd) => {\n        // Successful login\n        console.log(asd);\n        if (this.authService.isAdmin()) {\n          this.router.navigate(['/admin/gifts/view']); // Navigate to admin page\n        } else {\n          this.router.navigate(['/customer/gifts/view']); // Navigate to organizer page\n        }\n      },\n      (error) => {\n        if (error.status === 500) {\n          this.error = 'Account not found. Please check your email and password.';\n        } else {\n          this.error = 'Invalid email or password'; // Display error message for other errors\n        }\n      }\n    );\n  }\n\n}\n","<!-- <div class=\"container\">\n     <h1>Login</h1>\n   \n     <form (ngSubmit)=\"login()\" #loginForm=\"ngForm\" novalidate>\n       <label for=\"email\">Email:</label>\n       <input type=\"text\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" [ngModelOptions]=\"{standalone: true}\" required\n              #emailNgModel=\"ngModel\">\n       <div *ngIf=\"emailNgModel.invalid && (emailNgModel.dirty || emailNgModel.touched)\"\n            class=\"error-message\">Email is required</div>\n   \n       <label for=\"password\">Password:</label>\n       <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" [ngModelOptions]=\"{standalone: true}\" required\n              #passwordNgModel=\"ngModel\">\n       <div *ngIf=\"passwordNgModel.invalid && (passwordNgModel.dirty || passwordNgModel.touched || loginForm.submitted)\"\n            class=\"error-message\">Password is required</div>\n   \n       <div *ngIf=\"error\" class=\"error-message\">{{ error }}</div>\n   \n       <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n     </form>\n   \n     <p class=\"register-link\">Don't have an account? <a href=\"/register\">Register here</a></p>\n   </div>\n   \n\n\n     -->\n     <div class=\"main-container\">\n       <div class=\"container\">\n           <h1>Login</h1>\n         \n           <form (ngSubmit)=\"login()\" #loginForm=\"ngForm\" novalidate>\n             <label for=\"email\" style=\"position: relative;\"> <!-- Add relative positioning to the label -->\n               Email:<span class=\"asterisk\">*</span>\n               <input type=\"text\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" [ngModelOptions]=\"{standalone: true}\" required\n                      #emailNgModel=\"ngModel\">\n             </label>\n             <div *ngIf=\"emailNgModel.invalid && emailNgModel.touched && emailNgModel.errors?.required\" class=\"error-message\">Email is required</div>\n         \n             <label for=\"password\" style=\"position: relative;\">\n               Password:<span class=\"asterisk\">*</span>\n               <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" [ngModelOptions]=\"{standalone: true}\" required\n                      #passwordNgModel=\"ngModel\">\n             </label>\n             <div *ngIf=\"passwordNgModel.invalid && passwordNgModel.touched && passwordNgModel.errors?.required\" class=\"error-message\">Password is required</div>\n         \n             <div *ngIf=\"error\" class=\"error-message\">{{ error }}</div>\n         \n             <button type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n           </form>\n         \n           <p class=\"register-link\">Don't have an account? <a href=\"/signup\">Register here</a></p>\n       </div>\n   </div>\n   \n   \n  ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Review } from 'src/app/models/review.model';\nimport { CartService } from 'src/app/services/cart.service';\nimport { Router } from '@angular/router';\nimport { GiftService } from 'src/app/services/gift.service';\n\n@Component({\n  selector: 'app-add-review',\n  templateUrl: './add-review.component.html',\n  styleUrls: ['./add-review.component.css'],\n})\nexport class AddReviewComponent implements OnInit {\n  addReviewForm: FormGroup;\n  errorMessage = '';\n  gifts: any =[];\n  giftTypes: any;\n\n  // userName: string | null = localStorage.getItem('userName');\n  // userName: string | null;\n  constructor(private fb: FormBuilder, private cartService: CartService, private router: Router, private giftService: GiftService) {\n    this.addReviewForm = this.fb.group({\n      userName: [localStorage.getItem('currentUser'), Validators.required],\n      subject: ['', Validators.required],\n      body: ['', Validators.required],\n      rating: ['', Validators.required],\n      dateCreated: [this.getCurrentDate(), Validators.required],\n    });\n  }\n\n  ngOnInit() {\n    console.log(localStorage.getItem('currentUser'))\n    this.viewAllGifts();\n    // this.addReviewForm.patchValue({\n    //   userName: this.emailaddress;\n    // });\n  }\n  getCurrentDate(): string {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear();\n    const month = ('0' + (currentDate.getMonth() + 1)).slice(-2);\n    const day = ('0' + currentDate.getDate()).slice(-2);\n    const hours = ('0' + currentDate.getHours()).slice(-2);\n    const minutes = ('0' + currentDate.getMinutes()).slice(-2);\n    const seconds = ('0' + currentDate.getSeconds()).slice(-2);\n  \n    return `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`;\n  }\n\n  viewAllGifts(){\n    this.giftService.viewAllGifts().subscribe(\n\n      (data: any) => {\n        this.giftTypes = data.$values.map((gift:any) =>gift.giftType);\n        console.log(this.giftTypes);\n        this.gifts = data;\n        console.log(this.gifts);\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  onSubmit(): void {\n    if (this.addReviewForm.valid) {\n      const newReview = this.addReviewForm.value;\n      const requestObj: Review = {\n        userId: Number(localStorage.getItem('userId')),\n        subject: newReview.subject,\n        body: newReview.body,\n        rating: newReview.rating,\n        dateCreated: newReview.dateCreated\n      };\n  \n      this.cartService.addReview(requestObj).subscribe(\n        (response) => {\n          console.log('Review added successfully', response);\n          this.addReviewForm.reset(); // Reset the form\n          this.router.navigateByUrl('/');\n        },\n        (error) => {\n          console.error('Error adding review', error);\n        }\n      );\n    } else {\n      this.errorMessage = 'All fields are required';\n    }\n  }\n}","<!-- <app-customerdashboard></app-customerdashboard>\n<div class=\"main-container\">\n    <h1>Add Review Details</h1>\n\n<form [formGroup]=\"addReviewForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"form-group\">\n        <label for=\"userId\">User Id:</label>\n        <input type=\"number\" id=\"userId\" formControlName=\"userId\" readonly>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"subject\">Select :</label>\n        Compliants\n        <input type=\"text\" id=\"subject\" formControlName=\"subject\">\n        <div *ngIf=\"addReviewForm.get('subject').hasError('required') && addReviewForm.get('subject').touched\"\n             class=\"error-message\">\n            *Subject is required.\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"body\">Feedback comments:</label>\n        <textarea id=\"body\" formControlName=\"body\"></textarea>\n        <div *ngIf=\"addReviewForm.get('body').hasError('required') && addReviewForm.get('body').touched\"\n             class=\"error-message\">\n            *Body is required.\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"rating\">Rating:</label>\n        <input type=\"number\" id=\"rating\" formControlName=\"rating\" min=\"1\" max=\"5\">\n        <div *ngIf=\"addReviewForm.get('rating').hasError('required') && addReviewForm.get('rating').touched\"\n             class=\"error-message\">\n            *Rating is required.\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"dateCreated\">Date Created:</label>\n        <input type=\"date\" id=\"dateCreated\" formControlName=\"dateCreated\" readonly>\n    </div>\n\n    <div *ngIf=\"errorMessage\" class=\"error-message\">\n        *{{ errorMessage }}\n    </div>\n\n    <div class=\"add-btn\">\n        <button type=\"submit\">Submit</button>\n    </div>\n\n</form>\n\n</div> -->\n<app-customerdashboard></app-customerdashboard>\n<div class=\"main-container\">\n    <h1>Add Review Details</h1>\n\n<form [formGroup]=\"addReviewForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"form-group\">\n        <label for=\"userName\">Email Address:</label>\n        <input type=\"text\" id=\"userName\" formControlName=\"userName\" readonly>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"subject\">Gift Type:<span class=\"asterisk\">*</span></label>\n        <select id=\"subject\" formControlName=\"subject\">\n            <option value=\"\" disabled selected>Select Gift Type</option>\n            <option *ngFor=\"let giftType of giftTypes\" [value]=\"giftType\">{{ giftType }}</option>\n        </select>\n        <div class=\"error-message\" *ngIf=\"addReviewForm.get('subject').hasError('required') && addReviewForm.get('subject').touched\">\n            Gift Type is required\n        </div>\n        \n    </div>\n    \n\n    <div class=\"form-group\">\n        <div class=\"validation\">\n            <label for=\"body\">Feedback comments:<span class=\"asterisk\">*</span></label>\n            <div class=\"error-message\" *ngIf=\"addReviewForm.get('body').hasError('required') && addReviewForm.get('body').touched\">\n                Feedback comments are required\n            </div>\n        </div>\n        <textarea id=\"body\" formControlName=\"body\"></textarea>\n    </div>\n    \n    <div class=\"form-group\">\n        <div class=\"validation\">\n            <label for=\"rating\">Rating:<span class=\"asterisk\">*</span></label>\n            <div class=\"error-message\" *ngIf=\"addReviewForm.get('rating').hasError('required') && addReviewForm.get('rating').touched\">\n                Rating is required\n            </div>\n        </div>\n        <div class=\"rating-buttons\">\n            <label *ngFor=\"let i of [1, 2, 3, 4, 5]\" class=\"rating-option\">\n                <input type=\"radio\" id=\"rating{{i}}\" formControlName=\"rating\" [value]=\"i\">\n                {{i}}\n            </label>\n        </div>\n    </div>\n    \n\n    <!-- <div class=\"form-group\">\n        <label for=\"dateCreated\">Date Created:</label>\n        <input type=\"date\" id=\"dateCreated\" formControlName=\"dateCreated\" readonly>\n    </div> -->\n\n    <div *ngIf=\"errorMessage\" class=\"error-message\">\n        *{{ errorMessage }}\n    </div>\n\n    <div class=\"add-btn\">\n        <button type=\"submit\">Submit</button>\n    </div>\n\n</form>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { MyCartComponent } from './components/my-cart/my-cart.component';\nimport { ViewGiftsComponent } from './components/view-gifts/view-gifts.component';\nimport { EditGiftComponent } from './components/edit-gift/edit-gift.component';\nimport { AddGiftComponent } from './components/add-gift/add-gift.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { CustomerdashboardComponent } from './components/customerdashboard/customerdashboard.component';\nimport { AuthGuard } from './components/authguard/auth.guard';\nimport { CustomerViewGiftsComponent } from './components/customer-view-gifts/customer-view-gifts.component';\nimport { CommonModule } from '@angular/common';\nimport { AddReviewComponent } from './components/add-review/add-review.component';\nimport { ViewReviewComponent } from './components/view-review/view-review.component';\nimport { PlaceOrderComponent } from './components/place-order/place-order.component';\nimport { MyOrdersComponent } from './components/my-orders/my-orders.component';\nimport { ViewOrdersComponent } from './components/view-orders/view-orders.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    LoginComponent,\n    NavbarComponent,\n    HomeComponent,\n    ErrorComponent,\n    MyCartComponent,\n    ViewGiftsComponent,\n    EditGiftComponent,\n    AddGiftComponent,\n    DashboardComponent,\n    CustomerdashboardComponent,\n    CustomerViewGiftsComponent,\n    AddReviewComponent,\n    ViewReviewComponent,\n    PlaceOrderComponent,\n    MyOrdersComponent,\n    ViewOrdersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    CommonModule\n  ],\n  providers: [AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GiftService } from 'src/app/services/gift.service';\nimport { Gift } from 'src/app/models/gift.model';\n\n@Component({\n  selector: 'app-edit-gift',\n  templateUrl: './edit-gift.component.html',\n  styleUrls: ['./edit-gift.component.css']\n})\nexport class EditGiftComponent implements OnInit {\n  editGiftForm: FormGroup;\n  gift: Gift;\n  errorMessage = '';\n\n  editedGift: any;\n  giftId: any;\n  photoImage=\"\";\n  constructor(\n    private fb: FormBuilder,\n    private giftService: GiftService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.editGiftForm = this.fb.group({\n      giftType: ['', Validators.required],\n      giftImageUrl: ['', Validators.required],\n      giftDetails: ['', Validators.required],\n      giftPrice: ['', [Validators.required, Validators.pattern('^[0-9]*$')]],\n      quantity: ['', [Validators.required, Validators.min(1)]],\n    });\n  }\n  ngOnInit(): void {\n    // Retrieve the serialized gift object from the query parameters\n    const gift = JSON.parse(this.route.snapshot.queryParamMap.get('gift'));\n  \n    if (gift) {\n      // Populate the form with the existing gift details\n      this.editGiftForm.patchValue({\n        giftType: gift.giftType,\n        giftImageUrl: this.photoImage,\n        giftDetails: gift.giftDetails,\n        quantity: gift.quantity, // Uncomment if 'quantity' is part of your gift object\n        giftPrice: gift.giftPrice,\n      });\n      console.log(this.photoImage);\n    } else {\n      // Handle the case when the gift object is not available\n    }\n  }\n  onSubmit(): void {\n    if (this.editGiftForm.valid) {\n      const updatedGift = this.editGiftForm.value;\n   \n      // Include the 'quantity' field in the request object\n      const requestObj: Gift = {\n        giftType: updatedGift.giftType,\n        giftImageUrl: this.photoImage,\n        giftDetails: updatedGift.giftDetails,\n        giftPrice: updatedGift.giftPrice,\n        quantity: updatedGift.quantity, // Add this line\n      };\n\n      // Fetch giftId from the route params\n      const giftId = this.route.snapshot.paramMap.get('giftId');\n      console.log(requestObj, \"photo\");\n      this.giftService.updateGift(giftId, requestObj).subscribe(\n        (response) => {\n          console.log('Gift updated successfully', response);\n          this.gift = response;\n\n          this.router.navigate(['/admin/gifts/view']);\n        },\n        (error) => {\n          console.error('Error updating gift', error);\n        }\n      );\n    } else {\n      // this.errorMessage = 'All fields are required';\n    }\n  }\n  \n  handleFileChange(event: any): void {\n    const file = event.target.files[0];\n \n    if (file) {\n      this.convertFileToBase64(file).then(\n        (base64String) => {\n          this.photoImage=base64String;\n          console.log(this.photoImage, \"final\");\n          \n        },\n        \n        (error) => {\n          console.error('Error converting file to base64:', error);\n          // Handle error appropriately\n        }\n      );\n    }\n  }\n \n  convertFileToBase64(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n \n      reader.onload = () => {\n        resolve(reader.result as string);\n      };\n \n      reader.onerror = (error) => {\n        reject(error);\n      };\n \n      reader.readAsDataURL(file);\n    });\n  }\n\n}\n","<!-- <app-dashboard></app-dashboard>\r\n<h2>Edit Gift</h2>\r\n\r\n<form [formGroup]=\"editGiftForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"giftType\">Gift Type:</label>\r\n    <input type=\"text\" id=\"giftType\" formControlName=\"giftType\">\r\n    <div *ngIf=\"editGiftForm.get('giftType').hasError('required') && editGiftForm.get('giftType').touched\" class=\"error-message\">\r\n      *Gift type is required.\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"giftImageUrl\">Gift Image URL:</label>\r\n    <input type=\"text\" id=\"giftImageUrl\" formControlName=\"giftImageUrl\">\r\n    <div *ngIf=\"editGiftForm.get('giftImageUrl').hasError('required') && editGiftForm.get('giftImageUrl').touched\"\r\n      class=\"error-message\">\r\n      *Gift image URL is required.\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"giftDetails\">Gift Details:</label>\r\n    <textarea id=\"giftDetails\" formControlName=\"giftDetails\"></textarea>\r\n    <div *ngIf=\"editGiftForm.get('giftDetails').hasError('required') && editGiftForm.get('giftDetails').touched\"\r\n      class=\"error-message\">\r\n      *Gift details are required.\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"quantity\">Quantity:</label> \r\n    <input type=\"number\" id=\"quantity\" formControlName=\"quantity\"> \r\n    <div *ngIf=\"editGiftForm.get('quantity').hasError('required') && editGiftForm.get('quantity').touched\" class=\"error-message\">\r\n        *Quantity is required.\r\n    </div>\r\n    <div *ngIf=\"editGiftForm.get('quantity').hasError('min') && editGiftForm.get('quantity').touched\" class=\"error-message\">\r\n        *Quantity must be greater than 0.\r\n    </div>\r\n</div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"giftPrice\">Price:</label>\r\n    <input type=\"number\" id=\"giftPrice\" formControlName=\"giftPrice\">\r\n    <div *ngIf=\"editGiftForm.get('giftPrice').hasError('required') && editGiftForm.get('giftPrice').touched\"\r\n      class=\"error-message\">\r\n      *Price is required.\r\n    </div>\r\n    <div *ngIf=\"editGiftForm.get('giftPrice').hasError('min') && editGiftForm.get('giftPrice').touched\" class=\"error-message\">\r\n      *Price must be greater than 0.\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"errorMessage\" class=\"error-message\">\r\n    *{{ errorMessage }}\r\n  </div>\r\n\r\n  <div class=\"add-btn\">\r\n    <button type=\"submit\">Update Gift</button>\r\n  </div>\r\n</form> -->\r\n\r\n\r\n<app-dashboard></app-dashboard>\r\n<h2>Edit Gift</h2>\r\n\r\n<form [formGroup]=\"editGiftForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"giftType\"> <!-- Remove position: relative from label -->\r\n      Gift Type:<span class=\"asterisk\">*</span>\r\n      <input type=\"text\" id=\"giftType\" formControlName=\"giftType\">\r\n      <div *ngIf=\"editGiftForm.get('giftType').invalid && editGiftForm.get('giftType').touched\" class=\"error-message\">Gift Type is required</div> <!-- Display the error message conditionally -->\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"giftImageUrl\">\r\n      Gift Image:<span class=\"asterisk\">*</span>\r\n      <input type=\"file\" id=\"giftImageUrl\" formControlName=\"giftImageUrl\" (change)=\"handleFileChange($event)\"\r\n            accept=\".png, .jpg\">\r\n      <div *ngIf=\"editGiftForm.get('giftImageUrl').invalid && editGiftForm.get('giftImageUrl').touched\" class=\"error-message\">Gift Image is required</div> <!-- Display the error message conditionally -->\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"giftDetails\">\r\n      Gift Details:<span class=\"asterisk\">*</span>\r\n      <textarea id=\"giftDetails\" formControlName=\"giftDetails\"></textarea>\r\n      <div *ngIf=\"editGiftForm.get('giftDetails').invalid && editGiftForm.get('giftDetails').touched\" class=\"error-message\">Gift Details is required</div> <!-- Display the error message conditionally -->\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"quantity\">\r\n      Quantity:<span class=\"asterisk\">*</span>\r\n      <input type=\"number\" id=\"quantity\" formControlName=\"quantity\">\r\n      <div *ngIf=\"editGiftForm.get('quantity').invalid && editGiftForm.get('quantity').touched\" class=\"error-message\">Quantity is required</div> <!-- Display the error message conditionally -->\r\n      <div *ngIf=\"editGiftForm.get('quantity').hasError('min') && editGiftForm.get('quantity').touched\" class=\"error-message\">Quantity must be greater than zero</div> <!-- Display the error message conditionally -->\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"giftPrice\">\r\n      Price:<span class=\"asterisk\">*</span>\r\n      <input type=\"number\" id=\"giftPrice\" formControlName=\"giftPrice\">\r\n      <div *ngIf=\"editGiftForm.get('giftPrice').invalid && editGiftForm.get('giftPrice').touched\" class=\"error-message\">Price is required</div> <!-- Display the error message conditionally -->\r\n      <div *ngIf=\"editGiftForm.get('giftPrice').hasError('min') && editGiftForm.get('giftPrice').touched\" class=\"error-message\">Price must be greater than zero</div> <!-- Display the error message conditionally -->\r\n    </label>\r\n  </div>\r\n\r\n  <div *ngIf=\"errorMessage\" class=\"error-message\">\r\n    *{{ errorMessage }}\r\n  </div>\r\n\r\n  <div class=\"add-btn\">\r\n    <button type=\"submit\">Update Gift</button>\r\n  </div>\r\n</form>\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  public apiUrl =\n    'https://8080-bfabeabdaebdadfccdadbafeaecccaaeccf.premiumproject.examly.io';\n\n  constructor(private http: HttpClient) { }\n\n  updateCart(cartDetails: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    console.log(cartDetails);\n    const cartId = localStorage.getItem('cartId');\n    return this.http.put(`${this.apiUrl}/api/cart/update/${cartId}`, cartDetails, { headers });\n  }\n\n  removeGiftsFromCart(cartDetails: any, giftId: any): any {\n    console.log(\"cartId\", cartDetails.cartId)\n    console.log(\"cartDetails\", cartDetails)\n    console.log(\"Gift Details\", cartDetails.gifts)\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.delete(`${this.apiUrl}/api/cart/${cartDetails.cartId}?giftId=${giftId}`, { headers });\n  }\n\n  getGiftsFromCart(cartId: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.get(`${this.apiUrl}/api/cart/${cartId}`, { headers });\n  }\n\n\n  getAllGiftsFromCart(): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    const customerId = localStorage.getItem('customerId');\n    return this.http.get(`${this.apiUrl}/api/cart/customer/${customerId}`, { headers });\n  }\n\n  addReview(review: any): Observable<any> {\n    const token = localStorage.getItem('token');\n    // console.log(token)\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n\n    return this.http.post(`${this.apiUrl}/api/review`, review, { headers });\n  }\n\n  getAllReviews() {\n    const token = localStorage.getItem('token');\n    // console.log(token)\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.get(`${this.apiUrl}/api/review`, { headers });\n  }\n\n  getTotalAmount(customerId: string): Observable<any> {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.get(`${this.apiUrl}/api/cart/customer/${customerId}/total`, { headers });\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { CartService } from 'src/app/services/cart.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-my-cart',\n  templateUrl: './my-cart.component.html',\n  styleUrls: ['./my-cart.component.css'],\n})\nexport class MyCartComponent implements OnInit {\n  maxQuantity: number; // Define maxQuantity\n  customerData = { totalAmount: 0 };\n  gifts = [];\n  totalAmount = 0;\n  giftsCart: any;\n  \n  cartId = Number(localStorage.getItem('cartId'));\n  userQuantity: number = 1;\n  \n  constructor(private cartService: CartService, private router: Router) {}\n  \n  // giftsCart = {};\n  ngOnInit(): void {\n    this.updateTotalAmount();\n    this.getAllGiftsFromCart();\n  }\n\n  getAllGiftsFromCart() {\n    this.cartService.getAllGiftsFromCart().subscribe(\n      (response) => {\n        console.log(response);\n        if (response && response.gifts) {\n          // Check if the gifts property is an object with $values array\n          if (Array.isArray(response.gifts.$values)) {\n            // Extract the array from the nested object\n            this.gifts = response.gifts.$values;\n          } else {\n            // If $values array is not present, consider gifts itself as the array\n            this.gifts = response.gifts;\n          }\n          this.totalAmount = response.totalAmount;\n          this.gifts.forEach(gift => {\n            gift.userQuantity = 1;\n          });\n        } else {\n          console.error('Invalid response format:', response);\n        }\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n    //new\n  }\n  \n  calculateTotalAmount(): number {\n    let totalAmount = 0;\n    for (const gift of this.gifts) {\n      totalAmount += gift.userQuantity * gift.giftPrice;\n    }\n    return totalAmount;\n  }\n  validateQuantity(giftData: any): void {\n    // Your validation logic here, using giftData.userQuantity\n  }\n  \n  // initializeQuantity() {\n  //   this.gifts.forEach(giftData => {\n  //     giftData.maxQuantity = 1;\n  //   });\n  // }\n\n\n  placeOrder() {\n    const totalAmount = this.calculateTotalAmount();\n    this.router.navigate(['/customer/placeorder'], { queryParams: { totalAmount } });\n  }\n\n\n  updateQuantity(giftData: any): void {\n    if (giftData.quantity > giftData.userQuantity) {\n      giftData.quantity = giftData.userQuantity;\n    }\n    \n    giftData.totalAmount = giftData.userQuantity * giftData.giftPrice; // Update the total amount for the specific gift\n    \n    const customerId = localStorage.getItem('customerId'); // Get the customerId from local storage\n    \n    // Call getTotalAmount method from CartService with customerId as argument\n    this.cartService.getTotalAmount(customerId).subscribe(\n      response => {\n        console.log(response); // Handle the response as per your requirement\n      },\n      error => {\n        console.error('Error:', error);\n      }\n    );\n    this.updateTotalAmount();\n    console.log('Total amount updated:', this.totalAmount);\n  }\n  updateTotalAmount(): void {\n    this.totalAmount = this.gifts.reduce((total, gift) => total + (this.userQuantity * gift.giftPrice), 0);\n    console.log('Total amount:', this.totalAmount);\n  }\n\n  // removeFromCart(giftId: number) {\n  //   this.gifts = this.gifts.filter(gift => gift.giftId !== giftId);\n  //   this.giftsCart = {\n  //     cartId: Number(localStorage.getItem('cartId')),\n  //     customer: { customerId: Number(localStorage.getItem('customerId')) },\n  //     gifts: [...this.gifts],\n  //     totalAmount: this.totalAmount - this.gifts.filter(gift => gift.giftId === giftId)[0].giftPrice\n  //   } \n  //   console.log(this.giftsCart);\n  //   this.cartService.updateCart(this.giftsCart).subscribe(\n  //     response => {\n  //       console.log(response);\n  //       console.log('Gift removed from cart successfully');\n  //       this.getAllGiftsFromCart();\n  //     },\n  //     error => {\n  //       console.error(error);\n  //     }\n  //   );\n  // }\n  removeFromCart(giftId: number) {\n    const index = this.gifts.findIndex(gift => gift.giftId === giftId);\n    if (index !== -1) {\n      const removedGift = this.gifts.splice(index, 1)[0]; // Remove the gift from the array\n      this.totalAmount -= removedGift.giftPrice; // Adjust the total amount\n      const giftsCart = {\n        cartId: this.cartId,\n        // giftId:this.giftId,\n        customer: { customerId: Number(localStorage.getItem('customerId')) },\n        gifts: [...this.gifts],\n        totalAmount: this.totalAmount,\n        updatedCart: true\n      }; \n      console.log(giftsCart);\n      this.cartService.removeGiftsFromCart(giftsCart, giftId).subscribe(\n        response => {\n          console.log(response);\n          console.log('Gift removed from cart successfully');\n          this.getAllGiftsFromCart();\n        },\n        error => {\n          console.error(error);\n        }\n      );\n    } else {\n      console.error('Gift not found in the cart');\n    }\n  }\n\n}\n","<app-customerdashboard></app-customerdashboard>\n<div class=\"container\">\n  <div *ngFor=\"let giftData of gifts\">\n    <h2>{{ giftData.giftType }}</h2>\n    <img [src]=\"giftData.giftImageUrl\" alt=\"{{ giftData.giftType }}\" />\n    <p>{{ giftData.giftDetails }}</p>\n    <p>Price: {{ giftData.giftPrice }}</p>\n    <p>Available Quantity: {{ giftData.quantity }}</p>\n    <p>\n      Quantity:\n      <input type=\"number\" class=\"userquantity\" style=\"width: 50px;\" [min]=\"1\" [max]=\"giftData.quantity\" [(ngModel)]=\"giftData.userQuantity\" (ngModelChange)=\"validateQuantity(giftData)\">\n      <span *ngIf=\"giftData.userQuantity > giftData.quantity\" style=\"color: red;\">Quantity exceeds available quantity!</span>\n    </p>\n    <button (click)=\"removeFromCart(giftData.giftId)\" id=\"remove-btn\" class=\"remove\">Remove from Cart</button>\n  </div>\n</div>\n<div class=\"button-container\">\n  <button (click)=\"placeOrder()\" class=\"order\">Place Order</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormBuilder, FormGroup,Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  registrationForm!: FormGroup;\n  username: string = \"\";\n  password: string = \"\";\n  confirmPassword: string = \"\";\n  mobileNumber: string = \"\";\n  role: string = \"\";\n  email: string = \"\";\n  passwordMismatch: boolean = false; // New property to track password mismatch\n  registrationError: string = \"\"; \n  constructor(private authService: AuthService, private router: Router,private fb: FormBuilder) {\n\n  }\n  ngOnInit() {\n   this.registrationForm = this.fb.group({\n     mobileNumber: ['', [Validators.required,  Validators.pattern(/^[0-9]{10}$/)]],\n     email: ['', [Validators.required, Validators.email]],\n   });\n }\n  register(): void {\n    if (this.password !== this.confirmPassword) {\n      this.passwordMismatch = true;\n      return;\n    }\n\n    this.passwordMismatch = false;\n\n    if (!this.isPasswordComplex(this.password)) {\n      return; // Password complexity check failed\n    }\n\n    this.authService.register(this.username, this.password, this.role, this.email,this.mobileNumber).subscribe(\n      (user) => {\n        console.log(user);\n\n          this.router.navigate(['/login']);\n  \n      },\n      (error) => {\n        console.log(error);\n\n        // Handle registration error\n        if (error === 'Email is already taken. Please choose another email.') {\n          this.registrationError = 'Email is already taken. Please choose another email.';\n        } else if (error === 'Username is already taken. Please choose another username.') {\n          this.registrationError = 'Username is already taken. Please choose another username.';\n        } else {\n          this.registrationError = 'Registration failed. Please try again.';\n        }\n      }\n    );\n  }\n  isPasswordComplex(password: string): boolean {\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasLowercase = /[a-z]/.test(password);\n    const hasDigit = /\\d/.test(password);\n    const hasSpecialChar = /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\-]/.test(password);\n\n    return hasUppercase && hasLowercase && hasDigit && hasSpecialChar;\n  }\n}\n","<!-- <!-- <div class=\"main-container\">\n  <div class=\"container\">\n      <h1>Registration</h1>\n    \n      <form (ngSubmit)=\"register()\" #registrationForm=\"ngForm\" novalidate>\n        <label for=\"username\">Username:</label>\n        <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" [ngModelOptions]=\"{standalone: true}\" required\n               #usernameNgModel=\"ngModel\">\n        <div *ngIf=\"usernameNgModel.invalid && (usernameNgModel.dirty || usernameNgModel.touched)\"\n             class=\"error-message\">Username is required</div>\n          \n    \n            <label for=\"email\">Email:</label>\n            <input type=\"text\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" [ngModelOptions]=\"{standalone: true}\" required\n                   #emailNgModel=\"ngModel\">\n            <div *ngIf=\"emailNgModel.invalid && (emailNgModel.dirty || emailNgModel.touched)\"\n                 class=\"error-message\">Email is required</div>\n    \n        <label for=\"password\">Password:</label>\n        <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" [ngModelOptions]=\"{standalone: true}\" required\n               #passwordNgModel=\"ngModel\">\n        <div *ngIf=\"passwordNgModel.invalid && (passwordNgModel.dirty || passwordNgModel.touched)\"\n             class=\"error-message\">Password is required</div>\n        <div *ngIf=\"passwordNgModel.valid && !isPasswordComplex(password)\" class=\"error-message\">\n          Password must include at least one uppercase letter, one lowercase letter, one digit, and one special character\n        </div>\n    \n        <label for=\"confirmPassword\">Confirm Password:</label>\n        <input type=\"password\" id=\"confirmPassword\" [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" [ngModelOptions]=\"{standalone: true}\" required\n               #confirmPasswordNgModel=\"ngModel\">\n        <div *ngIf=\"confirmPasswordNgModel.invalid && (confirmPasswordNgModel.dirty || confirmPasswordNgModel.touched)\"\n             class=\"error-message\">Confirm Password is required</div>\n        <div *ngIf=\"password !== confirmPassword && !passwordMismatch\" class=\"error-message\">\n          Passwords do not match\n        </div>\n    \n        <label for=\"mobile\">Mobile Number:</label>\n            <input type=\"tel\" id=\"mobile\" [(ngModel)]=\"mobileNumber\" name=\"mobile\" [ngModelOptions]=\"{standalone: true}\" required\n                   #mobileNgModel=\"ngModel\">\n            <div *ngIf=\"mobileNgModel.invalid && (mobileNgModel.dirty || mobileNgModel.touched)\"\n                 class=\"error-message\">Mobile number is required</div>\n    \n        <label for=\"role\">Role:</label>\n        <select id=\"role\" [(ngModel)]=\"role\" name=\"role\" required #roleNgModel=\"ngModel\">\n          <option value=\"\" disabled>Select a role</option>\n          <option value=\"admin\">ADMIN</option>\n          <option value=\"customer\">CUSTOMER</option>\n        </select>\n        <div *ngIf=\"roleNgModel.invalid && (roleNgModel.dirty || roleNgModel.touched)\"\n             class=\"error-message\">Role is required</div>\n    \n        <div *ngIf=\"passwordMismatch\" class=\"error-message\">Passwords do not match</div>\n    \n        <button type=\"submit\" [disabled]=\"registrationForm.invalid || password !== confirmPassword\">Register</button>\n      </form>\n    </div>\n  </div> -->\n\n\n  <!-- <div class=\"main-container\">\n    <div class=\"container\">\n        <h1>Registration</h1>\n      \n        <form (ngSubmit)=\"register()\" #registrationForm=\"ngForm\" novalidate>\n          <label for=\"username\" style=\"position: relative;\">\n            Username:\n            <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" [ngModelOptions]=\"{standalone: true}\" required\n                   #usernameNgModel=\"ngModel\">\n            <div *ngIf=\"usernameNgModel.invalid && (usernameNgModel.dirty || usernameNgModel.touched)\"\n                 class=\"error-message\" style=\"position: absolute; top: 0; right: 0;\">*</div> \n          </label>\n      \n          <label for=\"email\" style=\"position: relative;\">\n            Email:\n            <input type=\"text\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" [ngModelOptions]=\"{standalone: true}\" required\n                   #emailNgModel=\"ngModel\">\n            <div *ngIf=\"emailNgModel.invalid && (emailNgModel.dirty || emailNgModel.touched)\"\n                 class=\"error-message\" style=\"position: absolute; top: 0; right: 0;\">*</div>\n          </label>\n      \n          <label for=\"password\" style=\"position: relative;\">\n            Password:\n            <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" [ngModelOptions]=\"{standalone: true}\" required\n                   #passwordNgModel=\"ngModel\">\n            <div *ngIf=\"passwordNgModel.invalid && (passwordNgModel.dirty || passwordNgModel.touched)\"\n                 class=\"error-message\" style=\"position: absolute; top: 0; right: 0;\">*</div>\n            <div *ngIf=\"passwordNgModel.valid && !isPasswordComplex(password)\" class=\"error-message\">\n              Password must include at least one uppercase letter, one lowercase letter, one digit, and one special character\n            </div>\n          </label>\n      \n          <label for=\"confirmPassword\" style=\"position: relative;\">\n            Confirm Password:\n            <input type=\"password\" id=\"confirmPassword\" [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" [ngModelOptions]=\"{standalone: true}\" required\n                   #confirmPasswordNgModel=\"ngModel\">\n            <div *ngIf=\"confirmPasswordNgModel.invalid && (confirmPasswordNgModel.dirty || confirmPasswordNgModel.touched)\"\n                 class=\"error-message\" style=\"position: absolute; top: 0; right: 0;\">*</div>\n            <div *ngIf=\"password !== confirmPassword && !passwordMismatch\" class=\"error-message\">\n              Passwords do not match\n            </div>\n          </label>\n      \n          <label for=\"mobile\" style=\"position: relative;\">\n            Mobile Number:\n            <input type=\"tel\" id=\"mobile\" [(ngModel)]=\"mobileNumber\" name=\"mobile\" [ngModelOptions]=\"{standalone: true}\" required\n                   #mobileNgModel=\"ngModel\">\n            <div *ngIf=\"mobileNgModel.invalid && (mobileNgModel.dirty || mobileNgModel.touched)\"\n                 class=\"error-message\" style=\"position: absolute; top: 0; right: 0;\">*</div>\n          </label>\n      \n          <label for=\"role\" style=\"position: relative;\">\n            Role:\n            <select id=\"role\" [(ngModel)]=\"role\" name=\"role\" required #roleNgModel=\"ngModel\">\n              <option value=\"\" disabled>Select a role</option>\n              <option value=\"admin\">ADMIN</option>\n              <option value=\"customer\">CUSTOMER</option>\n            </select>\n            <div *ngIf=\"roleNgModel.invalid && (roleNgModel.dirty || roleNgModel.touched)\"\n                 class=\"error-message\" style=\"position: absolute; top: 0; right: 0;\">*</div>\n          </label>\n      \n          <div *ngIf=\"passwordMismatch\" class=\"error-message\">Passwords do not match</div>\n      \n          <button type=\"submit\" [disabled]=\"registrationForm.invalid || password !== confirmPassword\">Register</button>\n        </form>\n      </div>\n    </div> -->\n\n    <div class=\"main-container\">\n      <div class=\"container\">\n          <h1>Registration</h1>\n\n          <form (ngSubmit)=\"register()\" #registrationForm=\"ngForm\" novalidate>\n            <label for=\"username\" class=\"input-label\">\n              Username:<span class=\"asterisk\">*</span>\n              <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" [ngModelOptions]=\"{standalone: true}\" required\n                     #usernameNgModel=\"ngModel\">\n              <div *ngIf=\"usernameNgModel.invalid && (usernameNgModel.dirty || usernameNgModel.touched)\"\n                   class=\"error-message\" [hidden]=\"!usernameNgModel.errors?.required\">Username is required</div>\n            </label>\n        \n            <label for=\"email\" class=\"input-label\">\n              Email:<span class=\"asterisk\">*</span>\n              <input type=\"text\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" [ngModelOptions]=\"{standalone: true}\" required\n                     #emailNgModel=\"ngModel\">\n              <div *ngIf=\"emailNgModel.invalid && (emailNgModel.dirty || emailNgModel.touched)\"\n                   class=\"error-message\" [hidden]=\"!emailNgModel.errors?.required\">Email is required</div>\n            </label>\n            <div *ngIf=\"registrationError\" class=\"error-message\">{{ registrationError }}</div>\n        \n            <label for=\"password\" class=\"input-label\">\n              Password:<span class=\"asterisk\">*</span>\n              <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" [ngModelOptions]=\"{standalone: true}\" required\n                     #passwordNgModel=\"ngModel\">\n              <div *ngIf=\"passwordNgModel.invalid && (passwordNgModel.dirty || passwordNgModel.touched)\"\n                   class=\"error-message\" [hidden]=\"!passwordNgModel.errors?.required\">Password is required</div>\n              <div *ngIf=\"passwordNgModel.valid && !isPasswordComplex(password)\" class=\"error-message\">\n                Password must include at least one uppercase letter, one lowercase letter, one digit, and one special character\n              </div>\n            </label>\n        \n            <label for=\"confirmPassword\" class=\"input-label\">\n              Confirm Password:<span class=\"asterisk\">*</span>\n              <input type=\"password\" id=\"confirmPassword\" [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" [ngModelOptions]=\"{standalone: true}\" required\n                     #confirmPasswordNgModel=\"ngModel\">\n              <div *ngIf=\"confirmPasswordNgModel.invalid && (confirmPasswordNgModel.dirty || confirmPasswordNgModel.touched)\"\n                   class=\"error-message\" [hidden]=\"!confirmPasswordNgModel.errors?.required\">Confirm Password is required</div>\n              <div *ngIf=\"password !== confirmPassword && !passwordMismatch\" class=\"error-message\">Passwords do not match</div>\n            </label>\n        \n            <label for=\"mobile\" class=\"input-label\">\n              Mobile Number:<span class=\"asterisk\">*</span>\n              <input type=\"tel\" id=\"mobile\" [(ngModel)]=\"mobileNumber\" name=\"mobile\" [ngModelOptions]=\"{standalone: true}\" required\n                      minlength=\"10\" maxlength=\"10\" pattern=\"[0-9]*\"\n                      #mobileNgModel=\"ngModel\">\n              <div *ngIf=\"mobileNgModel.invalid && (mobileNgModel.dirty || mobileNgModel.touched)\"\n                      class=\"error-message\" [hidden]=\"!mobileNgModel.errors?.required\">Mobile Number is required</div>\n              <div *ngIf=\"mobileNgModel.errors?.minlength || mobileNgModel.errors?.maxlength\"\n                      class=\"error-message\">Mobile Number must be exactly 10 digits</div>\n              <div *ngIf=\"mobileNgModel.errors?.pattern\" class=\"error-message\">Mobile Number must contain only numbers</div>\n          </label>\n        \n            <label for=\"role\" class=\"input-label\">\n              Role:<span class=\"asterisk\">*</span>\n              <select id=\"role\" [(ngModel)]=\"role\" name=\"role\" required #roleNgModel=\"ngModel\">\n                <option value=\"\" disabled>Select a role</option>\n                <option value=\"admin\">ADMIN</option>\n                <option value=\"customer\">CUSTOMER</option>\n              </select>\n              <div *ngIf=\"roleNgModel.invalid && (roleNgModel.dirty || roleNgModel.touched)\"\n                   class=\"error-message\" [hidden]=\"!roleNgModel.errors?.required\">Role is required</div>\n            </label>\n        \n            <div *ngIf=\"passwordMismatch || registrationForm.invalid\" class=\"error-message\">Please fill out all required fields correctly</div>\n        \n            <button type=\"submit\" [disabled]=\"registrationForm.invalid || password !== confirmPassword\">Register</button>\n          </form>\n        </div>\n      </div>\n  ","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const url: string = state.url;\n    const user = localStorage.getItem('currentUser');\n\n    if (user) {\n      if (this.isAdminRoute(url) && user === 'admin') {\n        this.router.navigate(['/error']);\n        return false;\n      }\n\n      if (this.isCustomerRoute(url) && user=== 'customer') {\n        this.router.navigate(['/error']);\n        return false;\n      }\n  \n      if (this.isCommonRoute(url)) {\n        return true;\n      }\n      // Navigate to not found page if user tries to access a page where they do not have access\n      this.router.navigate(['/error']);\n      return false;\n    }\n    // Navigate to login page if user is not authenticated\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  private isAdminRoute(url: string): boolean {\n    const adminRoutes = ['admin/dashboard', 'admin/viewgifts', 'admin/editgift', 'admin/addgift', 'admin/vieworders'];\n    return adminRoutes.some(route => url.includes(route));\n  }\n\n  private isCustomerRoute(url: string): boolean {\n    const customerRoutes = ['customer/dashboard', 'customer/mycart', 'customer/placeorder', 'customer/myorders'];\n    return customerRoutes.some(route => url.includes(route));\n  }\n\n  private isCommonRoute(url: string): boolean {\n    const commonRoutes = ['', 'login','signup'];  \n    return commonRoutes.some(route => url.includes(route));\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GiftService } from 'src/app/services/gift.service';\n \ninterface Gift {\n  giftType: string;\n  giftImageUrl: string;\n  giftDetails: string;\n  giftPrice: number;\n  quantity: number;\n}\n \n@Component({\n  selector: 'app-add-gift',\n  templateUrl: './add-gift.component.html',\n  styleUrls: ['./add-gift.component.css']\n})\nexport class AddGiftComponent implements OnInit {\n  addGiftForm: FormGroup;\n  errorMessage = '';\n  selectedFile: File | null = null;\n  photoImage=\"\";\n \n  constructor(private fb: FormBuilder, private giftService: GiftService, private route: Router) {\n    this.addGiftForm = this.fb.group({\n      giftType: ['', Validators.required],\n      giftImageUrl: [null, Validators.required],\n      giftDetails: ['', Validators.required],\n      giftPrice: ['', [Validators.required, Validators.pattern('^[0-9]*$')]],\n      quantity: ['', [Validators.required, Validators.min(1)]],\n    });\n  }\n \n  ngOnInit(): void {\n  }\n \n  onSubmit(): void {\n    if (this.addGiftForm.valid) {\n      const newGift = this.addGiftForm.value;\n      const requestObj: Gift = {\n        giftType: newGift.giftType,\n        giftImageUrl: this.photoImage,\n        giftDetails: newGift.giftDetails,\n        giftPrice: newGift.giftPrice,\n        quantity: newGift.quantity,\n      };\n\n      this.giftService.addGift(requestObj).subscribe(\n        (response) => {\n          console.log('Gift added successfully', response);\n          this.route.navigate(['/admin/gifts/view']);\n          this.addGiftForm.reset(); // Reset the form\n        },\n        (error) => {\n          console.error('ErrorAddingGift', error);\n        }\n      );\n    } else {\n      this.errorMessage = \"All fields are required\";\n    }\n  }\n  onFileSelected(event: any) {\n    const files: FileList = event.target.files;\n    if (files.length > 0) {\n      this.selectedFile = files[0];\n    }\n  }\n\n  handleFileChange(event: any): void {\n    const file = event.target.files[0];\n \n    if (file) {\n      this.convertFileToBase64(file).then(\n        (base64String) => {\n          this.photoImage=base64String\n        },\n        (error) => {\n          console.error('Error converting file to base64:', error);\n          // Handle error appropriately\n        }\n      );\n    }\n  }\n \n  convertFileToBase64(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n \n      reader.onload = () => {\n        resolve(reader.result as string);\n      };\n \n      reader.onerror = (error) => {\n        reject(error);\n      };\n \n      reader.readAsDataURL(file);\n    });\n  }\n}","<!-- <app-dashboard></app-dashboard>\n<h2>Add New Gift</h2>\n \n<form [formGroup]=\"addGiftForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"giftType\">Gift Type:</label>\n        <input type=\"text\" id=\"giftType\" formControlName=\"giftType\">\n        <div *ngIf=\"addGiftForm.get('giftType').hasError('required') && addGiftForm.get('giftType').touched\" class=\"error-message\">\n            *Gift type is required.\n        </div>\n    </div>\n \n    <div class=\"form-group\">\n        <label for=\"giftImageUrl\">Gift Image URL:</label>\n        <input type=\"text\" id=\"giftImageUrl\" formControlName=\"giftImageUrl\">\n        <div *ngIf=\"addGiftForm.get('giftImageUrl').hasError('required') && addGiftForm.get('giftImageUrl').touched\" class=\"error-message\">\n            *Gift image URL is required.\n        </div>\n    </div>\n \n    <div class=\"form-group\">\n        <label for=\"giftDetails\">Gift Details:</label>\n        <textarea id=\"giftDetails\" formControlName=\"giftDetails\"></textarea>\n        <div *ngIf=\"addGiftForm.get('giftDetails').hasError('required') && addGiftForm.get('giftDetails').touched\" class=\"error-message\">\n            *Gift details are required.\n        </div>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"quantity\">Quantity:</label>\n        <input type=\"number\" id=\"quantity\" formControlName=\"quantity\">\n        <div *ngIf=\"addGiftForm.get('quantity').hasError('required') && addGiftForm.get('quantity').touched\" class=\"error-message\"> \n            *Quantity is required.\n        </div>\n        <div *ngIf=\"addGiftForm.get('quantity').hasError('min') && addGiftForm.get('quantity').touched\" class=\"error-message\"> \n            *Quantity must be greater than 0.\n        </div>\n    </div>\n \n    <div class=\"form-group\">\n        <label for=\"giftPrice\">Price:</label>\n        <input type=\"number\" id=\"giftPrice\" formControlName=\"giftPrice\">\n        <div *ngIf=\"addGiftForm.get('giftPrice').hasError('required') && addGiftForm.get('giftPrice').touched\" class=\"error-message\">\n            *Price is required.\n        </div>\n        <div *ngIf=\"addGiftForm.get('giftPrice').hasError('min') && addGiftForm.get('giftPrice').touched\" class=\"error-message\">\n            *Price must be greater than 0.\n        </div>\n    </div>\n \n    <div *ngIf=\"errorMessage\" class=\"error-message\">\n        *{{ errorMessage }}\n    </div>\n \n    <div class=\"add-btn\">\n        <button type=\"submit\">Add Gift</button>\n    </div>\n</form> -->\n\n<app-dashboard></app-dashboard>\n<h2>Add New Gift</h2>\n \n<form [formGroup]=\"addGiftForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"giftType\" style=\"position: relative;\"> <!-- Add relative positioning to the label -->\n            Gift Type:<span class=\"asterisk\">*</span>\n            <input type=\"text\" id=\"giftType\" formControlName=\"giftType\">\n            <div *ngIf=\"addGiftForm.get('giftType').invalid && addGiftForm.get('giftType').touched\" class=\"error-message\">Gift Type is required</div> <!-- Display the error message conditionally -->\n        </label>\n    </div>\n \n    <div class=\"form-group\">\n        <label for=\"giftImageUrl\" style=\"position: relative;\">\n            Gift Image:<span class=\"asterisk\">*</span>\n            <input type=\"file\" id=\"giftImageUrl\" formControlName=\"giftImageUrl\" (change)=\"handleFileChange($event)\"\n            accept=\".png, .jpg\">\n            <div *ngIf=\"addGiftForm.get('giftImageUrl').invalid && addGiftForm.get('giftImageUrl').touched\" class=\"error-message\">Gift Image is required</div> \n        </label>\n    </div>\n    \n \n    <div class=\"form-group\">\n        <label for=\"giftDetails\" style=\"position: relative;\"> <!-- Add relative positioning to the label -->\n            Gift Details:<span class=\"asterisk\">*</span>\n            <textarea id=\"giftDetails\" formControlName=\"giftDetails\"></textarea>\n            <div *ngIf=\"addGiftForm.get('giftDetails').invalid && addGiftForm.get('giftDetails').touched\" class=\"error-message\">Gift Details is required</div> <!-- Display the error message conditionally -->\n        </label>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"quantity\" style=\"position: relative;\"> <!-- Add relative positioning to the label -->\n            Quantity:<span class=\"asterisk\">*</span>\n            <input type=\"number\" id=\"quantity\" formControlName=\"quantity\">\n            <div *ngIf=\"addGiftForm.get('quantity').invalid && addGiftForm.get('quantity').touched\" class=\"error-message\">Quantity is required</div> <!-- Display the error message conditionally -->\n        </label>\n    </div>\n \n    <div class=\"form-group\">\n        <label for=\"giftPrice\" style=\"position: relative;\"> <!-- Add relative positioning to the label -->\n            Price:<span class=\"asterisk\">*</span>\n            <input type=\"number\" id=\"giftPrice\" formControlName=\"giftPrice\">\n            <div *ngIf=\"addGiftForm.get('giftPrice').invalid && addGiftForm.get('giftPrice').touched\" class=\"error-message\">Price is required</div> <!-- Display the error message conditionally -->\n        </label>\n    </div>\n \n    <div *ngIf=\"errorMessage\" class=\"error-message\">\n        *{{ errorMessage }}\n    </div>\n \n    <div class=\"add-btn\">\n        <button type=\"submit\">Add Gift</button>\n    </div>\n</form>\n\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Router} from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  showLogoutPopup = false;\n  isLoggedIn: boolean = false;\n  isAdmin: boolean = false;\n  isCustomer: boolean = false;\n\n  constructor(private authService: AuthService, private router: Router) {\n    this.authService.isAuthenticated$.subscribe((authenticated: boolean) => {\n      this.isLoggedIn = authenticated;\n      if (this.isLoggedIn) {\n        this.isAdmin = this.authService.isAdmin();\n        this.isCustomer = this.authService.isCustomer();\n        console.log(this.isAdmin);\n        console.log(this.isCustomer);\n\n      } else {\n        this.isAdmin = false;\n        this.isCustomer = false;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    // Initialize the properties on component initialization\n    this.isLoggedIn = this.authService.isAuthenticated();\n    if (this.isLoggedIn) {\n      this.isAdmin = this.authService.isAdmin();\n      this.isCustomer = this.authService.isCustomer();\n    }\n  }\n\n  logout(): void {\n    this.isLoggedIn = false;\n    this.isAdmin = false;\n    this.isCustomer = false;\n    this.authService.logout();\n    localStorage.clear()\n    this.router.navigate(['/login']);\n  }\n}\n","<header>\n    <div class=\"logo\">\n        <h1>Online Customized Gift Portal</h1>\n    </div>\n    <nav>\n        <ul class=\"nav-links\">\n            <ng-container *ngIf=\"!isLoggedIn\">\n                <li><a routerLink=\"/signup\">Register</a></li>\n                <li><a routerLink=\"/login\">Login</a></li>\n            </ng-container>\n            <ng-container *ngIf=\"isLoggedIn\">\n                <li><a routerLink=\"/\">Home</a></li>\n                <li><a routerLink=\"/admin/dashboard\" *ngIf=\"isAdmin\">Dashboard</a></li>\n                <li><a routerLink=\"/customer/dashboard\" *ngIf=\"isCustomer\">Dashboard</a></li>\n                <li>\n                    <button class=\"button button-logout\" (click)=\"showLogoutPopup = true\">\n                        Logout\n                    </button>\n                </li>\n            </ng-container>\n        </ul>   \n    </nav>\n</header>\n\n<div *ngIf=\"showLogoutPopup\" class=\"logout-popup\">\n    <div class=\"logout-popup-content\">\n        <p>Are you sure you want to logout?</p>\n        <button (click)=\"logout(); showLogoutPopup = false\" id=\"logout-btn\" class=\"button button-yes\">\n            Yes, Logout\n        </button>\n        <button (click)=\"showLogoutPopup = false\" class=\"button button-cancel\">Cancel</button>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { Gift } from 'src/app/models/gift.model';\nimport { GiftService } from 'src/app/services/gift.service';\n\ninterface Gift {\n  giftId: string;\n}\n\n@Component({\n  selector: 'app-view-gifts',\n  templateUrl: './view-gifts.component.html',\n  styleUrls: ['./view-gifts.component.css']\n})\nexport class ViewGiftsComponent {\n  gifts: Gift[] = [];\n  constructor(private router: Router,private giftService: GiftService) { }\n  \n  // ngOnInit(): void {\n  //   this.giftService.viewAllGifts().subscribe((gifts: Gift[]) => {\n  //     console.log(gifts); // Add this line\n  //     this.gifts = gifts;\n  //   }, (error) => {\n  //     console.error(error);\n  //   });\n  // }\n\n  ngOnInit(): void {\n    this.giftService.viewAllGifts().subscribe((response: any) => {\n      this.gifts = response.$values; // assuming $values is the array of gifts\n    }, (error) => {\n      console.error(error);\n    });\n  }\n\n  editGift(gift: Gift): void {\n    // Serialize the gift object and pass it as a query parameter\n    const queryParams = {\n      gift: JSON.stringify(gift)\n    };\n\n    // Navigate to the edit page with the serialized gift object\n    this.router.navigate(['/admin/editgift', gift.giftId], { queryParams: queryParams });\n  }\n\n  deleteGift(gift: Gift): void {\n    this.giftService.deleteGift(gift.giftId).subscribe(() => {\n      console.log('Gift deleted successfully');\n      this.gifts = this.gifts.filter(g => g.giftId !== gift.giftId);\n    }, (error) => {\n      console.error(error);\n    });\n  }\n\n}\n","<app-dashboard></app-dashboard>\r\n\r\n<div class=\"gifts-container\"  *ngIf=\"gifts.length; else noGifts\" >\r\n    <div *ngFor=\"let gift of gifts\" class=\"gift-card\">\r\n      <h2>{{ gift.giftType }}</h2>\r\n      <img [src]=\"gift.giftImageUrl\" alt=\"{{ gift.giftType }}\">\r\n      <p>Details: {{ gift.giftDetails }}</p>\r\n      <p>Price: {{ gift.giftPrice }}</p>\r\n        <p>Quantity: {{ gift.quantity }}</p>\r\n      <!-- Edit and Delete Buttons -->\r\n      <button (click)=\"editGift(gift)\">Edit</button>&nbsp;\r\n      <button (click)=\"deleteGift(gift)\">Delete</button>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-template #noGifts>\r\n    <div>No gifts available</div>\r\n  </ng-template>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  public apiUrl='https://8080-bfabeabdaebdadfccdadbafeaecccaaeccf.premiumproject.examly.io'\n\n  constructor(private http: HttpClient) { }\n  \n  addOrder(orderData: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    console.log(orderData);\n    return this.http.post(`${this.apiUrl}/api/order`, orderData);\n  }\n\n  cancelOrder(orderId: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.delete(`${this.apiUrl}/api/order/${orderId}`);\n  }\n\n  // viewAllOrders(orderData: any): any {\n  //   const token = localStorage.getItem('token');\n  //   const headers = new HttpHeaders({\n  //     'Content-Type': 'application/json',\n  //     'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n  //   });\n  //   return this.http.get(`${this.apiUrl}/api/order`, orderData);\n  // }\n\n  viewAllOrders(): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.get(`${this.apiUrl}/api/order`, { headers: headers });\n  }\n\n  viewOrderByUserId(): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    const customerId = localStorage.getItem('customerId');\n    console.log(customerId,\"customerId\");\n    return this.http.get(`${this.apiUrl}/api/order/customer/${customerId}`);\n  }\n\n  // viewOrderByCustomerId(customerId: any): any {\n  //   return this.http.get(`${this.apiUrl}/api/order/customer/${customerId}`);\n  // }\n\n  viewOrderById(orderId: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.get(`${this.apiUrl}/api/order/${orderId}`);\n  }\n\n  deleteOrder(orderId: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.delete(`${this.apiUrl}/api/order/${orderId}`, { headers });\n  }\n\n}\n","// import { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n// import { BehaviorSubject, Observable, of } from 'rxjs';\n// import { catchError, tap } from 'rxjs/operators';\n\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthService {\n//   private currentUserSubject: BehaviorSubject<string | null>;\n//   public currentUser: Observable<string | null>;\n//   public apiUrl = 'https://8080-bfabeabdaebdadfccdadbafeafdbeabddabfeee.premiumproject.examly.io';\n//   private roleSubject = new BehaviorSubject<string>('');\n//   role$: Observable<string> = this.roleSubject.asObservable();\n//   private isAuthenticatedSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this.isAuthenticated());\n//   isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n\n//   constructor(private http: HttpClient) {\n//     this.currentUserSubject = new BehaviorSubject<string | null>(localStorage.getItem('currentUser'));\n//     this.currentUser = this.currentUserSubject.asObservable();\n//    }\n\n//    register(username: string, password: string, role: string, email: string, mobileNumber:string): Observable<any> {\n//     const body = { username, password, role, email, mobileNumber };\n//     console.log(body);\n\n//     return this.http.post<any>(`${this.apiUrl}/api/register`, body).pipe(\n//       catchError(this.handleError<any>('register'))\n//     );\n//   }\n\n//   isLoggedIn(): boolean {\n//     console.log(localStorage.getItem('userId'));\n\n//     return !!localStorage.getItem('userId');\n//   }\n\n//   getUserRole(): any {\n//     const role = localStorage.getItem('role');\n//     return role?.toString;\n//   }\n\n//   private handleError<T>(operation = 'operation', result?: T) {\n//     return (error: any): Observable<T> => {\n//       // Handle the error (you can log it or perform other actions)\n//       console.error(error);\n\n//       // Let the app keep running by returning an empty result.\n//       return of(result as T);\n//     };\n//   }\n\n//   login(email: string, password: string): Observable<any> {\n//     const loginData = { email, password };\n//     console.log(loginData);\n//     return this.http.post<any>(`${this.apiUrl}/api/login`, loginData)\n//       .pipe(\n//         tap((response: any) => {\n//           console.log(response);\n//           // Store the token in localStorage or a more secure storage method\n//           //localStorage.setItem('token', response.token);\n//           localStorage.setItem('currentUser', response.username);\n//           localStorage.setItem('role', response.role);\n//           localStorage.setItem('userId', response.id);\n          \n\n//           console.log(localStorage.getItem('role'));\n//           this.roleSubject.next(response.role);\n//           this.isAuthenticatedSubject.next(true); // Notify observers that the user is authenticate\n\n//         })\n//       );\n//   }\n\n//   logout(): void {\n//     // Remove the token from storage upon logout\n//     //localStorage.removeItem('token');\n//     localStorage.removeItem('currentUser');\n//     localStorage.removeItem('role');\n//     localStorage.removeItem('userId');\n//     localStorage.removeItem('studentId');\n//     localStorage.removeItem('admissionId');\n\n//     this.currentUserSubject.next(null);\n//   }\n\n//   isAuthenticated(): boolean {\n//     // Check if the user is authenticated by verifying the token\n//     const token = localStorage.getItem('userId');\n//     console.log(token);\n\n//     return !!token; // Return true if the token exists\n//   }\n\n//   isAdmin(): boolean {\n//     const role = localStorage.getItem('role');\n//       if(role === 'admin' || role === 'ADMIN'){\n//         return true;\n//       }\n    \n//     return false; \n//   }\n\n//   isCustomer(): boolean {\n\n//     const role = localStorage.getItem('role');\n    \n//       if(role === 'customer' || role === 'CUSTOMER'){\n//         return true;\n//       }\n//     return false; \n//   }\n\n// }\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private currentUserSubject: BehaviorSubject<string | null>;\n  public currentUser: Observable<string | null>;\n  public apiUrl = 'https://8080-bfabeabdaebdadfccdadbafeaecccaaeccf.premiumproject.examly.io'; // Replace with your Spring Boot backend URL\n  private userRoleSubject = new BehaviorSubject<string>('');\n  private userIdSubject = new BehaviorSubject<string>('');\n  userRole$: Observable<string> = this.userRoleSubject.asObservable();\n  userId$: Observable<string> = this.userIdSubject.asObservable();\n  private isAuthenticatedSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(this.isAuthenticated());\n  isAuthenticated$ = this.isAuthenticatedSubject.asObservable();\n \n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<string | null>(\n      localStorage.getItem('currentUser')\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n \n  register(username: string, password: string, role: string, email: string, mobileNumber: string): Observable<any> {\n    const body = { username, password, role, email, mobileNumber };\n    console.log(body);\n \n    return this.http.post<any>(`${this.apiUrl}/api/register`, body).pipe(\n      tap((user) => this.storeUserData(user)),\n      catchError(this.handleError<any>('register'))\n    );\n  }\n \n  login(email: string, password: string): Observable<any> {\n    const loginData = { email, password };\n    console.log(loginData);\n    return this.http.post<any>(`${this.apiUrl}/api/login`, loginData)\n      .pipe(\n        tap(response => {\n          console.log(response.token.token);\n          localStorage.setItem('token',response.token.token)\n          const decodedToken = this.decodeToken(response.token.token);\n          if(response.token.customerId==0)\n          {\n            localStorage.setItem(\"customerId\",\"0\")\n          }\n          else{\n            localStorage.setItem(\"customerId\",response.token.customerId)\n            localStorage.setItem(\"cartId\",response.token.cartId)\n\n          }\n\n          if (decodedToken) {\n            localStorage.setItem('userId', decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier']);\n            localStorage.setItem('userRole', decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']);\n            localStorage.setItem('currentUser', decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress']);\n            console.log(localStorage.getItem('userRole'))\n            // Update BehaviorSubjects\n            this.userRoleSubject.next(decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role']);\n            this.userIdSubject.next(decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier']);\n            this.isAuthenticatedSubject.next(true);\n          } else {\n            console.error('Unable to decode token or missing claims');\n          }\n        })\n      );\n  }\n \n  logout(): void {\n    // Remove the token, role, and user ID from storage upon logout\n    localStorage.removeItem('token');\n    localStorage.removeItem('userRole');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('customerId');\n    localStorage.removeItem('currentUser');\n    this.currentUserSubject.next(null);\n  }\n \n  isAuthenticated(): boolean {\n    // Check if the user is authenticated by verifying the token\n    const token = localStorage.getItem('token');\n    console.log(token);\n \n    return !!token; // Return true if the token exists\n  }\n \n  isAdmin(): boolean {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decodedToken = this.decodeToken(token);\n      console.log(\"decodedToken\", decodedToken);\n      return decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] === 'admin';\n    }\n    return false;\n  }\n \n  isCustomer(): boolean {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decodedToken = this.decodeToken(token);\n      return decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] === 'customer';\n    }\n    return false;\n  }\n \n  getCustomerName(): string {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decodedToken = this.decodeToken(token);\n      return decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'];\n    }\n    return '';\n  }\n \n  private storeUserData(user: any): void {\n    localStorage.setItem('token', user.token);\n    localStorage.setItem('userRole', user.role);\n    localStorage.setItem('userId', user.userId);\n  }\n \n  private decodeToken(token: string): any {\n    try {\n      const decoded = JSON.parse(atob(token.split('.')[1]));\n      console.log(decoded);\n      return decoded;\n    } catch (error) {\n      return null;\n      //added\n    }\n  }\n \n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      return of(result as T);\n    };\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GiftService {\n\n  public apiUrl='https://8080-bfabeabdaebdadfccdadbafeaecccaaeccf.premiumproject.examly.io'\n\n  constructor(private http: HttpClient) { }\n\n  addGift(gift: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    console.log(gift);\n    return this.http.post(`${this.apiUrl}/api/gift`, gift, {headers});\n  }\n\n  viewAllGifts(): Observable<any[]> {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.get<any[]>(`${this.apiUrl}/api/gift`, {headers});\n  }\n\n  // updateGift(giftId: any, updatedGift: any): any {\n  //   const token = localStorage.getItem('token');\n  //   const headers = new HttpHeaders({\n  //     'Content-Type': 'application/json',\n  //     'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n  //   });\n  //   const cartId = localStorage.getItem('cartId'); // Get the cartId from localStorage\n  //   updatedGift.cartId = cartId; \n  //   console.log(giftId,updatedGift);\n  //   return this.http.put(`${this.apiUrl}/api/gift/${giftId}`, updatedGift, {headers});\n  // }\n\n  updateGift(giftId: any, updatedGift: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n  \n    // Check if customerId is present in localStorage\n    const customerId = localStorage.getItem('customerId');\n    if (customerId) {\n      const cartId = localStorage.getItem('cartId'); // Get the cartId from localStorage\n      updatedGift.cartId = cartId;\n    }\n  \n    console.log(giftId, updatedGift);\n    return this.http.put(`${this.apiUrl}/api/gift/${giftId}`, updatedGift, { headers });\n  }\n  \n\n\n  deleteGift(giftId: any): any {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}` // Assuming your token is a bearer token, replace it accordingly\n    });\n    return this.http.delete(`${this.apiUrl}/api/gift/${giftId}`,{headers});\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './components/authguard/auth.guard';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { CustomerdashboardComponent } from './components/customerdashboard/customerdashboard.component';\nimport { ViewGiftsComponent } from './components/view-gifts/view-gifts.component';\nimport { CustomerViewGiftsComponent } from './components/customer-view-gifts/customer-view-gifts.component';\nimport { MyCartComponent } from './components/my-cart/my-cart.component';\nimport { EditGiftComponent } from './components/edit-gift/edit-gift.component';\nimport { AddGiftComponent } from './components/add-gift/add-gift.component';\nimport { AddReviewComponent } from './components/add-review/add-review.component';\nimport { ViewReviewComponent } from './components/view-review/view-review.component';\nimport { PlaceOrderComponent } from './components/place-order/place-order.component';\nimport { ViewOrdersComponent } from './components/view-orders/view-orders.component';\nimport { MyOrdersComponent } from './components/my-orders/my-orders.component';\n\n\nconst routes: Routes = [\n  {path: '', component:HomeComponent},\n  {path: 'signup', component:RegistrationComponent},\n  {path: 'login', component:LoginComponent},\n  {path: 'admin/dashboard', component:DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'customer/dashboard', component:CustomerdashboardComponent, canActivate: [AuthGuard]},\n  {path: 'admin/gifts/view', component:ViewGiftsComponent, canActivate: [AuthGuard]},\n  {path: 'customer/gifts/view', component:CustomerViewGiftsComponent, canActivate: [AuthGuard]},\n  {path: 'customer/mycart', component:MyCartComponent, canActivate: [AuthGuard]},\n  {path: 'admin/editgift/:giftId', component:EditGiftComponent, canActivate: [AuthGuard]},\n  {path: 'admin/addgift', component:AddGiftComponent, canActivate: [AuthGuard]},\n  {path:'customer/addreview', component:AddReviewComponent, canActivate: [AuthGuard]},\n  {path: 'admin/viewreview', component:ViewReviewComponent, canActivate: [AuthGuard]},\n  {path: 'customer/placeorder', component:PlaceOrderComponent, canActivate: [AuthGuard]},\n  {path: 'customer/myorders', component:MyOrdersComponent, canActivate: [AuthGuard]},\n  {path: 'admin/vieworders', component:ViewOrdersComponent, canActivate: [AuthGuard]},\n  { path: 'error', component: ErrorComponent, data: { message: 'Oops! Something went wrong.' }},\n  { path: '**', redirectTo: '/error', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}